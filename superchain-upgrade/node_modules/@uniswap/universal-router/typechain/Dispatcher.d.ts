/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DispatcherInterface extends ethers.utils.Interface {
  functions: {
    "V3_POSITION_MANAGER()": FunctionFragment;
    "V4_POSITION_MANAGER()": FunctionFragment;
    "execute(bytes,bytes[])": FunctionFragment;
    "msgSender()": FunctionFragment;
    "poolManager()": FunctionFragment;
    "uniswapV3SwapCallback(int256,int256,bytes)": FunctionFragment;
    "unlockCallback(bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "V3_POSITION_MANAGER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "V4_POSITION_MANAGER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [BytesLike, BytesLike[]]
  ): string;
  encodeFunctionData(functionFragment: "msgSender", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "poolManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "uniswapV3SwapCallback",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unlockCallback",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "V3_POSITION_MANAGER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "V4_POSITION_MANAGER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "msgSender", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "poolManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uniswapV3SwapCallback",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unlockCallback",
    data: BytesLike
  ): Result;

  events: {};
}

export class Dispatcher extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DispatcherInterface;

  functions: {
    V3_POSITION_MANAGER(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "V3_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    V4_POSITION_MANAGER(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "V4_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    execute(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "execute(bytes,bytes[])"(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    msgSender(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "msgSender()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    poolManager(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "poolManager()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    uniswapV3SwapCallback(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "uniswapV3SwapCallback(int256,int256,bytes)"(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unlockCallback(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unlockCallback(bytes)"(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  V3_POSITION_MANAGER(overrides?: CallOverrides): Promise<string>;

  "V3_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<string>;

  V4_POSITION_MANAGER(overrides?: CallOverrides): Promise<string>;

  "V4_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<string>;

  execute(
    commands: BytesLike,
    inputs: BytesLike[],
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "execute(bytes,bytes[])"(
    commands: BytesLike,
    inputs: BytesLike[],
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  msgSender(overrides?: CallOverrides): Promise<string>;

  "msgSender()"(overrides?: CallOverrides): Promise<string>;

  poolManager(overrides?: CallOverrides): Promise<string>;

  "poolManager()"(overrides?: CallOverrides): Promise<string>;

  uniswapV3SwapCallback(
    amount0Delta: BigNumberish,
    amount1Delta: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "uniswapV3SwapCallback(int256,int256,bytes)"(
    amount0Delta: BigNumberish,
    amount1Delta: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unlockCallback(
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unlockCallback(bytes)"(
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    V3_POSITION_MANAGER(overrides?: CallOverrides): Promise<string>;

    "V3_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<string>;

    V4_POSITION_MANAGER(overrides?: CallOverrides): Promise<string>;

    "V4_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<string>;

    execute(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    "execute(bytes,bytes[])"(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    msgSender(overrides?: CallOverrides): Promise<string>;

    "msgSender()"(overrides?: CallOverrides): Promise<string>;

    poolManager(overrides?: CallOverrides): Promise<string>;

    "poolManager()"(overrides?: CallOverrides): Promise<string>;

    uniswapV3SwapCallback(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "uniswapV3SwapCallback(int256,int256,bytes)"(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    unlockCallback(data: BytesLike, overrides?: CallOverrides): Promise<string>;

    "unlockCallback(bytes)"(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    V3_POSITION_MANAGER(overrides?: CallOverrides): Promise<BigNumber>;

    "V3_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<BigNumber>;

    V4_POSITION_MANAGER(overrides?: CallOverrides): Promise<BigNumber>;

    "V4_POSITION_MANAGER()"(overrides?: CallOverrides): Promise<BigNumber>;

    execute(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "execute(bytes,bytes[])"(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    msgSender(overrides?: CallOverrides): Promise<BigNumber>;

    "msgSender()"(overrides?: CallOverrides): Promise<BigNumber>;

    poolManager(overrides?: CallOverrides): Promise<BigNumber>;

    "poolManager()"(overrides?: CallOverrides): Promise<BigNumber>;

    uniswapV3SwapCallback(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "uniswapV3SwapCallback(int256,int256,bytes)"(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unlockCallback(data: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "unlockCallback(bytes)"(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    V3_POSITION_MANAGER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "V3_POSITION_MANAGER()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    V4_POSITION_MANAGER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "V4_POSITION_MANAGER()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    execute(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "execute(bytes,bytes[])"(
      commands: BytesLike,
      inputs: BytesLike[],
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    msgSender(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "msgSender()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "poolManager()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    uniswapV3SwapCallback(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "uniswapV3SwapCallback(int256,int256,bytes)"(
      amount0Delta: BigNumberish,
      amount1Delta: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unlockCallback(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unlockCallback(bytes)"(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
