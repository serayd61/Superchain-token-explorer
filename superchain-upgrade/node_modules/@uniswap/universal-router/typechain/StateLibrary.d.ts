/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface StateLibraryInterface extends ethers.utils.Interface {
  functions: {
    "FEE_GROWTH_GLOBAL0_OFFSET()": FunctionFragment;
    "LIQUIDITY_OFFSET()": FunctionFragment;
    "POOLS_SLOT()": FunctionFragment;
    "POSITIONS_OFFSET()": FunctionFragment;
    "TICKS_OFFSET()": FunctionFragment;
    "TICK_BITMAP_OFFSET()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "FEE_GROWTH_GLOBAL0_OFFSET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LIQUIDITY_OFFSET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOLS_SLOT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POSITIONS_OFFSET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TICKS_OFFSET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TICK_BITMAP_OFFSET",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "FEE_GROWTH_GLOBAL0_OFFSET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LIQUIDITY_OFFSET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "POOLS_SLOT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "POSITIONS_OFFSET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TICKS_OFFSET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "TICK_BITMAP_OFFSET",
    data: BytesLike
  ): Result;

  events: {};
}

export class StateLibrary extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: StateLibraryInterface;

  functions: {
    FEE_GROWTH_GLOBAL0_OFFSET(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "FEE_GROWTH_GLOBAL0_OFFSET()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    LIQUIDITY_OFFSET(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "LIQUIDITY_OFFSET()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    POOLS_SLOT(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "POOLS_SLOT()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    POSITIONS_OFFSET(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "POSITIONS_OFFSET()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    TICKS_OFFSET(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "TICKS_OFFSET()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    TICK_BITMAP_OFFSET(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "TICK_BITMAP_OFFSET()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;
  };

  FEE_GROWTH_GLOBAL0_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

  "FEE_GROWTH_GLOBAL0_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

  LIQUIDITY_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

  "LIQUIDITY_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

  POOLS_SLOT(overrides?: CallOverrides): Promise<string>;

  "POOLS_SLOT()"(overrides?: CallOverrides): Promise<string>;

  POSITIONS_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

  "POSITIONS_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

  TICKS_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

  "TICKS_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

  TICK_BITMAP_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

  "TICK_BITMAP_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    FEE_GROWTH_GLOBAL0_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "FEE_GROWTH_GLOBAL0_OFFSET()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIQUIDITY_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "LIQUIDITY_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

    POOLS_SLOT(overrides?: CallOverrides): Promise<string>;

    "POOLS_SLOT()"(overrides?: CallOverrides): Promise<string>;

    POSITIONS_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "POSITIONS_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

    TICKS_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "TICKS_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

    TICK_BITMAP_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "TICK_BITMAP_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    FEE_GROWTH_GLOBAL0_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "FEE_GROWTH_GLOBAL0_OFFSET()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LIQUIDITY_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "LIQUIDITY_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

    POOLS_SLOT(overrides?: CallOverrides): Promise<BigNumber>;

    "POOLS_SLOT()"(overrides?: CallOverrides): Promise<BigNumber>;

    POSITIONS_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "POSITIONS_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

    TICKS_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "TICKS_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;

    TICK_BITMAP_OFFSET(overrides?: CallOverrides): Promise<BigNumber>;

    "TICK_BITMAP_OFFSET()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    FEE_GROWTH_GLOBAL0_OFFSET(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FEE_GROWTH_GLOBAL0_OFFSET()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LIQUIDITY_OFFSET(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "LIQUIDITY_OFFSET()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    POOLS_SLOT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "POOLS_SLOT()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    POSITIONS_OFFSET(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "POSITIONS_OFFSET()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    TICKS_OFFSET(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "TICKS_OFFSET()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    TICK_BITMAP_OFFSET(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "TICK_BITMAP_OFFSET()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
